apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  labels:
    dpf.nvidia.com/component: dpf-operator-controller-manager
  name: dpuserviceconfigurations.svc.dpf.nvidia.com
spec:
  group: svc.dpf.nvidia.com
  names:
    kind: DPUServiceConfiguration
    listKind: DPUServiceConfigurationList
    plural: dpuserviceconfigurations
    singular: dpuserviceconfiguration
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          DPUServiceConfiguration is the Schema for the dpuserviceconfigurations API. This object is intended to be used in
          conjunction with a DPUDeployment object. This object is the template from which the DPUService will be created. It
          contains all configuration options from the user to be provided to the service itself via the helm chart values.
          This object doesn't allow configuration of nodeSelector and resources in purpose as these are delegated to the
          DPUDeployment and DPUServiceTemplate accordingly.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DPUServiceConfigurationSpec defines the desired state of
              DPUServiceConfiguration
            properties:
              service:
                description: |-
                  Service is the name of the DPU service this configuration refers to. It must match .spec.service of a
                  DPUServiceTemplate object and one of the keys in .spec.services of a DPUDeployment object.
                type: string
              serviceConfiguration:
                description: ServiceConfiguration contains fields that are configured
                  on the generated DPUService.
                properties:
                  deployInCluster:
                    description: |-
                      TODO: Add nodeEffect
                      DeployInCluster indicates if the DPUService Helm Chart will be deployed on the Host cluster. Default to false.
                    type: boolean
                  helmChart:
                    description: HelmChart reflects the Helm related configuration
                    properties:
                      source:
                        description: Source specifies information about the Helm chart
                        properties:
                          chart:
                            description: Chart is the name of the helm chart.
                            type: string
                          path:
                            description: Path is the location of the chart inside
                              the repo.
                            type: string
                          releaseName:
                            description: ReleaseName is the name to give to the release
                              generate from the DPUService.
                            type: string
                          repoURL:
                            description: |-
                              TODO: This currently allows deploying a helm chart either from a helm repo. This should be validated as such.
                              RepoURL is the URL to the repository that contains the application helm chart.
                            type: string
                          version:
                            description: Version is a semver tag for the Chart's version.
                            type: string
                        required:
                        - repoURL
                        - version
                        type: object
                      values:
                        description: Values specifies Helm values to be passed to
                          Helm template, defined as a map. This takes precedence over
                          Values.
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                    required:
                    - source
                    type: object
                  serviceDaemonSet:
                    description: ServiceDaemonSet contains settings related to the
                      underlying DaemonSet that is part of the Helm chart
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations specifies annotations which are added
                          to the ServiceDaemonSet.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels specifies labels which are added to the
                          ServiceDaemonSet.
                        type: object
                      updateStrategy:
                        description: UpdateStrategy specifies the DeaemonSet update
                          strategy for the ServiceDaemonset.
                        properties:
                          rollingUpdate:
                            description: |-
                              Rolling update config params. Present only if type = "RollingUpdate".
                              ---
                              TODO: Update this to follow our convention for oneOf, whatever we decide it
                              to be. Same as Deployment `strategy.rollingUpdate`.
                              See https://github.com/kubernetes/kubernetes/issues/35345
                            properties:
                              maxSurge:
                                anyOf:
                                - type: integer
                                - type: string
                                description: |-
                                  The maximum number of nodes with an existing available DaemonSet pod that
                                  can have an updated DaemonSet pod during during an update.
                                  Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
                                  This can not be 0 if MaxUnavailable is 0.
                                  Absolute number is calculated from percentage by rounding up to a minimum of 1.
                                  Default value is 0.
                                  Example: when this is set to 30%, at most 30% of the total number of nodes
                                  that should be running the daemon pod (i.e. status.desiredNumberScheduled)
                                  can have their a new pod created before the old pod is marked as deleted.
                                  The update starts by launching new pods on 30% of nodes. Once an updated
                                  pod is available (Ready for at least minReadySeconds) the old DaemonSet pod
                                  on that node is marked deleted. If the old pod becomes unavailable for any
                                  reason (Ready transitions to false, is evicted, or is drained) an updated
                                  pod is immediatedly created on that node without considering surge limits.
                                  Allowing surge implies the possibility that the resources consumed by the
                                  daemonset on any given node can double if the readiness check fails, and
                                  so resource intensive daemonsets should take into account that they may
                                  cause evictions during disruption.
                                x-kubernetes-int-or-string: true
                              maxUnavailable:
                                anyOf:
                                - type: integer
                                - type: string
                                description: |-
                                  The maximum number of DaemonSet pods that can be unavailable during the
                                  update. Value can be an absolute number (ex: 5) or a percentage of total
                                  number of DaemonSet pods at the start of the update (ex: 10%). Absolute
                                  number is calculated from percentage by rounding up.
                                  This cannot be 0 if MaxSurge is 0
                                  Default value is 1.
                                  Example: when this is set to 30%, at most 30% of the total number of nodes
                                  that should be running the daemon pod (i.e. status.desiredNumberScheduled)
                                  can have their pods stopped for an update at any given time. The update
                                  starts by stopping at most 30% of those DaemonSet pods and then brings
                                  up new DaemonSet pods in their place. Once the new pods are available,
                                  it then proceeds onto other DaemonSet pods, thus ensuring that at least
                                  70% of original number of DaemonSet pods are available at all times during
                                  the update.
                                x-kubernetes-int-or-string: true
                            type: object
                          type:
                            description: Type of daemon set update. Can be "RollingUpdate"
                              or "OnDelete". Default is RollingUpdate.
                            type: string
                        type: object
                    type: object
                required:
                - helmChart
                type: object
            required:
            - service
            - serviceConfiguration
            type: object
          status:
            description: DPUServiceConfigurationStatus defines the observed state
              of DPUServiceConfiguration
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
