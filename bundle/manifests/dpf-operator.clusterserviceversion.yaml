apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: '[]'
    capabilities: Basic Install
    description: Deploy and manage DOCA Platform Foundations in a Kubernetes cluster
    operatorframework.io/suggested-namespace: dpf-operator-system
    operators.operatorframework.io/builder: operator-sdk-v1.35.0
    operators.operatorframework.io/project_layout: unknown
    provider: NVIDIA
    support: NVIDIA
  name: dpf-operator.v0.1.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: Bfb
      name: bfbs.provisioning.dpf.nvidia.com
      version: v1alpha1
    - kind: DPUFlavor
      name: dpuflavors.provisioning.dpf.nvidia.com
      version: v1alpha1
    - kind: Dpu
      name: dpus.provisioning.dpf.nvidia.com
      version: v1alpha1
    - kind: DPUServiceChain
      name: dpuservicechains.sfc.dpf.nvidia.com
      version: v1alpha1
    - kind: DPUServiceInterface
      name: dpuserviceinterfaces.sfc.dpf.nvidia.com
      version: v1alpha1
    - kind: DPUServiceIPAM
      name: dpuserviceipams.sfc.dpf.nvidia.com
      version: v1alpha1
    - kind: DPUService
      name: dpuservices.svc.dpf.nvidia.com
      version: v1alpha1
    - kind: DpuSet
      name: dpusets.provisioning.dpf.nvidia.com
      version: v1alpha1
    - kind: ServiceChain
      name: servicechains.sfc.dpf.nvidia.com
      version: v1alpha1
    - kind: ServiceChainSet
      name: servicechainsets.sfc.dpf.nvidia.com
      version: v1alpha1
    - kind: ServiceInterface
      name: serviceinterfaces.sfc.dpf.nvidia.com
      version: v1alpha1
    - kind: ServiceInterfaceSet
      name: serviceinterfacesets.sfc.dpf.nvidia.com
      version: v1alpha1
    - kind: DPFOperatorConfig
      name: dpfoperatorconfigs.operator.dpf.nvidia.com
      version: v1alpha1
  description: |
    ## DPF Operator

    DPF Operator installs and manages a DOCA Platform Foundation system for provisioning DPUs.
  displayName: DPF Operator
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - '*'
          resources:
          - '*'
          verbs:
          - '*'
        serviceAccountName: dpf-operator-controller-manager
      deployments:
      - label:
          app.kubernetes.io/component: manager
          app.kubernetes.io/created-by: dpf-operator
          app.kubernetes.io/instance: release-name
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: dpf-operator
          app.kubernetes.io/part-of: dpf-operator
          app.kubernetes.io/version: 0.1.0
          control-plane: controller-manager
          dpf.nvidia.com/component: dpf-operator-controller-manager
          helm.sh/chart: dpf-operator-0.1.0
        name: dpf-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/instance: release-name
              app.kubernetes.io/name: dpf-operator
              control-plane: controller-manager
              dpf.nvidia.com/component: dpf-operator-controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                app.kubernetes.io/instance: release-name
                app.kubernetes.io/name: dpf-operator
                control-plane: controller-manager
                dpf.nvidia.com/component: dpf-operator-controller-manager
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: node-role.kubernetes.io/master
                        operator: Exists
                    - matchExpressions:
                      - key: node-role.kubernetes.io/control-plane
                        operator: Exists
              containers:
              - command:
                - /operator
                image: example.com/dpf-system:v0.1.0
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources: {}
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              serviceAccountName: dpf-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: dpf-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - dpf
  - dpu
  maintainers:
  - email: nvidia-network-operator-support@nvidia.com
    name: NVIDIA
  maturity: alpha
  minKubeVersion: 1.29.0
  provider:
    name: NVIDIA
  version: 0.1.0
