apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  labels:
    dpf.nvidia.com/component: dpf-operator-controller-manager
  name: dpus.provisioning.dpf.nvidia.com
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: webhook-service
          namespace: dpf-operator-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: provisioning.dpf.nvidia.com
  names:
    kind: Dpu
    listKind: DpuList
    plural: dpus
    singular: dpu
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Dpu is the Schema for the dpus API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DpuSpec defines the desired state of Dpu
            properties:
              bfb:
                type: string
              dpuFlavor:
                description: DPUFlavor is the name of the DPUFlavor that will be used
                  to deploy the DPU.
                type: string
              k8s_cluster:
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                  node_labels:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - name
                - namespace
                type: object
              nodeEffect:
                properties:
                  custom_label:
                    additionalProperties:
                      type: string
                    type: object
                  drain:
                    type: boolean
                  no_effect:
                    type: boolean
                  taint:
                    description: |-
                      The node this Taint is attached to has the "effect" on
                      any pod that does not tolerate the Taint.
                    properties:
                      effect:
                        description: |-
                          Required. The effect of the taint on pods
                          that do not tolerate the taint.
                          Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: Required. The taint key to be applied to a node.
                        type: string
                      timeAdded:
                        description: |-
                          TimeAdded represents the time at which the taint was added.
                          It is only written for NoExecute taints.
                        format: date-time
                        type: string
                      value:
                        description: The taint value corresponding to the taint key.
                        type: string
                    required:
                    - effect
                    - key
                    type: object
                type: object
              nodeName:
                type: string
              pci_address:
                type: string
            required:
            - bfb
            - dpuFlavor
            - k8s_cluster
            - nodeName
            type: object
          status:
            description: DpuStatus defines the observed state of DPU
            properties:
              bfb_version:
                description: bfb version of this DPU
                type: string
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              firmware:
                description: the firmware information of DPU
                properties:
                  bmc:
                    type: string
                  nic:
                    type: string
                  uefi:
                    type: string
                type: object
              pci_device:
                description: pci device information of this DPU
                type: string
              phase:
                description: high-level summary of where the DPU is in its lifecycle
                type: string
              required_reset:
                description: whether require reset of DPU
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
