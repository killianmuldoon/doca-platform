apiVersion: skaffold/v4beta8
kind: Config
metadata:
  name: dpf-operator

profiles:
  - name: dpuservice
    build:
      local:
        useBuildkit: true
      artifacts:
        - image: example.com/dpuservice-controller-manager
          runtimeType: go
          docker:
            buildArgs:
              ## Used for debugging. Disable inlining and optimizations in the go compiler. Passed to go build using `-gcflags`
              GCFLAGS: "all=-N -l"
              package: ./cmd/dpuservice
              builder_image: golang:1.22
              base_image: gcr.io/distroless/static:nonroot
            dockerfile: Dockerfile.dpf-system
    manifests:
      ## Deploy the manager.
      kustomize:
        paths:
          - config/dpuservice/default
          - config/servicechainset/crd
    portForward:
      - resourceType: deployment
        resourceName: dpuservice-controller-manager
        namespace: dpuservice-controller-system
        port: 56268
        localPort: 8080
        address: 0.0.0.0
  - name: operator
    # Note: The operator profile is mutually exclusive with other profiles as the operator will deploy the other components.
    build:
      local:
        useBuildkit: true
      artifacts:
        - image: controllerManager
          runtimeType: go
          docker:
            buildArgs:
              ## Used for debugging. Disable inlining and optimizations in the go compiler. Passed to go build using `-gcflags`
              gcflags: "all=-N -l"
              ldflags: "-extldflags '-static'"
              package: ./cmd/operator
              builder_image: golang:1.22
              base_image: gcr.io/distroless/static:nonroot
            dockerfile: Dockerfile.dpf-system
    deploy:
      helm:
        releases:
          - name: dpf-operator
            createNamespace: false
            namespace: dpf-operator-system
            chartPath: deploy/helm/dpf-operator
            setValueTemplates:
              controllerManager.image.repository: "{{.IMAGE_REPO_controllerManager}}"
              controllerManager.image.tag: "{{.IMAGE_TAG_controllerManager}}@{{.IMAGE_DIGEST_controllerManager}}"
