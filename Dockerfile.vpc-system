ARG builder_image
ARG base_image

# 1) Build stage builds go binaries (no emulation).
FROM --platform=${BUILDPLATFORM} ${builder_image} AS builder
WORKDIR /workspace

# Copy the Go Modules manifests
COPY go.mod go.mod
COPY go.sum go.sum
# Cache deps before building and copying source so that we don't need to re-download as much
# and so that source changes don't invalidate our downloaded layer
RUN --mount=type=cache,target=/go/pkg/mod \
    go mod download

COPY ./ ./

# Ensure that no additional tools or artifacts are included.
RUN make clean

ARG gcflags
ARG ldflags
ARG TARGETARCH

ENV GO_LDFLAGS=\"${ldflags}\"
ENV GO_GCFLAGS=\"${gcflags}\"
ENV ARCH=${TARGETARCH}

RUN --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/go/pkg/mod \
    make binaries-vpc-system

# 3) Final stage copies artefacts from the builder and dependency stages.
FROM ${base_image}
ARG TARGETARCH

WORKDIR /

# Ensure all files are copied with the correct user.
ENV uid=65532
USER ${uid}:${uid}

COPY --chown=${uid} --from=builder /workspace/bin/ovn-vpc-controller .
