---
- name: Wait 900 seconds for target connection to become reachable/usable
  ansible.builtin.wait_for_connection:
    timeout: 900

- name: Update apt package index
  apt:
    update_cache: yes

- name: Disable swap
  command: swapoff -a

- name: Ensure swap is disabled on boot
  replace:
    path: /etc/fstab
    regexp: '^\s*(.*\sswap\s.*)$'
    replace: '# \1'

- name: Create containerd modules-load configuration
  copy:
    dest: /etc/modules-load.d/containerd.conf
    content: |
      overlay
      br_netfilter

- name: Load overlay module
  modprobe:
    name: overlay

- name: Load br_netfilter module
  modprobe:
    name: br_netfilter

- name: Create Kubernetes sysctl configuration
  copy:
    dest: /etc/sysctl.d/kubernetes.conf
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1

- name: Apply sysctl settings
  command: sysctl --system

- name: Install required packages
  apt:
    name:
      - curl
      - gnupg2
      - software-properties-common
      - apt-transport-https
      - ca-certificates
    state: present
    update_cache: yes

- name: Remove unnecessary packages
  apt:
    autoremove: yes

- name: Add Docker GPG key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
    keyring: /etc/apt/trusted.gpg.d/docker.gpg

- name: Create directory for APT keyrings
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Add Docker asc key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'

- name: Get system architecture
  command: dpkg --print-architecture
  register: architecture

- name: Get Ubuntu version codename
  shell: |
    cat /etc/os-release | grep VERSION_CODENAME | sed 's/VERSION_CODENAME=//g'
  register: codename

- name: Add Docker repository
  lineinfile:
    path: /etc/apt/sources.list.d/docker.list
    line: "deb [arch={{ architecture.stdout }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ codename.stdout }} stable"
    create: yes

- name: Update apt cache
  apt:
    update_cache: yes

- name: Install Docker packages
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present

- name: Autoremove unused packages
  apt:
    autoremove: yes
    purge: yes

- name: Generate default containerd configuration
  command: containerd config default
  register: containerd_config

- name: Write containerd configuration to file
  copy:
    content: "{{ containerd_config.stdout }}"
    dest: /etc/containerd/config.toml

- name: Update SystemdCgroup setting in containerd configuration
  replace:
    path: /etc/containerd/config.toml
    regexp: 'SystemdCgroup\s*=\s*false'
    replace: 'SystemdCgroup = true'

- name: Update apt cache
  apt:
    update_cache: yes

- name: Install Kubernetes packages
  apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: latest
    allow_change_held_packages: yes

- name: Restart containerd
  ansible.builtin.systemd_service:
    state: restarted
    daemon_reload: true
    name: containerd

- name: Enable containerd
  ansible.builtin.systemd_service:
    name: containerd
    enabled: true

- name: Restart kubelet
  ansible.builtin.systemd_service:
    state: restarted
    daemon_reload: true
    name: kubelet

- name: Stop kubelet service
  ansible.builtin.systemd_service:
    name: kubelet
    state: stopped

- name: Initialize Kubernetes cluster with kubeadm
  command: kubeadm init --pod-network-cidr=10.244.0.0/16
  register: kubeadm_init

- name: Copy kubeconfig to local filesystem
  ansible.builtin.fetch:
    src: /etc/kubernetes/admin.conf
    dest: /tmp/cloud_kubeconfig.conf
    flat: true
