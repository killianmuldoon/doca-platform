apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/part-of: dpf-provisioning-controller-manager
    dpu.nvidia.com/component: dpf-provisioning-controller-manager
  name: dpf-provisioning-controller-manager
  namespace: dpf-provisioning
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: dpf-provisioning-controller-manager
    dpu.nvidia.com/component: dpf-provisioning-controller-manager
  name: dpf-provisioning-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - delete
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - jobs
  - nodes
  - pods
  - pods/exec
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - maintenance.nvidia.com
  resources:
  - nodemaintenances
  - nodemaintenances/status
  verbs:
  - '*'
- apiGroups:
  - operator.dpu.nvidia.com
  resources:
  - dpfoperatorconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - provisioning.dpu.nvidia.com
  resources:
  - bfbs
  - dpuclusters
  - dpus
  - dpusets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - provisioning.dpu.nvidia.com
  resources:
  - bfbs/finalizers
  - dpuclusters/finalizers
  - dpus/finalizers
  - dpusets/finalizers
  verbs:
  - update
- apiGroups:
  - provisioning.dpu.nvidia.com
  resources:
  - bfbs/status
  - dpuclusters/status
  - dpus/status
  - dpusets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - provisioning.dpu.nvidia.com
  resources:
  - dpudevices
  - dpuflavors
  - dpunodes
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/part-of: dpf-provisioning-controller-manager
    dpu.nvidia.com/component: dpf-provisioning-controller-manager
  name: dpf-provisioning-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dpf-provisioning-manager-role
subjects:
- kind: ServiceAccount
  name: dpf-provisioning-controller-manager
  namespace: dpf-provisioning
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/part-of: dpf-provisioning-controller-manager
    dpu.nvidia.com/component: dpf-provisioning-controller-manager
  name: dpf-provisioning-leader-election-role
  namespace: dpf-provisioning
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/part-of: dpf-provisioning-controller-manager
    dpu.nvidia.com/component: dpf-provisioning-controller-manager
  name: dpf-provisioning-leader-election-rolebinding
  namespace: dpf-provisioning
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dpf-provisioning-leader-election-role
subjects:
- kind: ServiceAccount
  name: dpf-provisioning-controller-manager
  namespace: dpf-provisioning
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/part-of: dpf-provisioning-controller-manager
    dpu.nvidia.com/component: dpf-provisioning-controller-manager
  name: dpf-provisioning-webhook-service
  namespace: dpf-provisioning
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    app.kubernetes.io/part-of: dpf-provisioning-controller-manager
    dpu.nvidia.com/component: dpf-provisioning-controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/part-of: dpf-provisioning-controller-manager
    dpu.nvidia.com/component: dpf-provisioning-controller-manager
  name: dpf-provisioning-controller-manager
  namespace: dpf-provisioning
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: dpf-provisioning-controller-manager
      dpu.nvidia.com/component: dpf-provisioning-controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/part-of: dpf-provisioning-controller-manager
        dpu.nvidia.com/component: dpf-provisioning-controller-manager
    spec:
      containers:
      - args:
        - --leader-elect
        - --v=3
        - --dms-image=example.com/doca-platform-foundation/dpf-provisioning-controller/hostdriver:v0.1.0
        - --hostnetwork-image=example.com/doca-platform-foundation/dpf-provisioning-controller/hostdriver:v0.1.0
        - --bfb-pvc=bfb-pvc
        command:
        - /provisioning
        env:
        - name: GRPC_ENFORCE_ALPN_ENABLED
          value: "false"
        image: example.com/dpf-system:v0.1.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 2
            memory: 2Gi
          requests:
            cpu: 1
            memory: 1Gi
        securityContext:
          capabilities:
            drop:
            - ALL
          privileged: true
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /bfb
          name: bfb-volume
      imagePullSecrets:
      - name: dpf-provisioning-regcred
      serviceAccountName: dpf-provisioning-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      - name: bfb-volume
        persistentVolumeClaim:
          claimName: bfb-pvc
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/part-of: dpf-provisioning-controller-manager
    dpu.nvidia.com/component: dpf-provisioning-controller-manager
  name: dpf-provisioning-ca-cert
  namespace: dpf-provisioning
spec:
  commonName: dpf-provisioning-ca-cert
  dnsNames:
  - dpf-provisioning-webhook-service.dpf-provisioning.svc
  - dpf-provisioning-webhook-service.dpf-provisioning.svc.cluster.local
  isCA: true
  issuerRef:
    kind: Issuer
    name: dpf-provisioning-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: dpf-provisioning-ca-secret
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/part-of: dpf-provisioning-controller-manager
    dpu.nvidia.com/component: dpf-provisioning-controller-manager
  name: dpf-provisioning-client-cert
  namespace: dpf-provisioning
spec:
  commonName: dpf-provisioning-client-cert
  dnsNames:
  - dpf-provisioning-webhook-service.dpf-provisioning.svc
  - dpf-provisioning-webhook-service.dpf-provisioning.svc.cluster.local
  duration: 24h0m0s
  issuerRef:
    kind: Issuer
    name: dpf-provisioning-issuer
  renewBefore: 8h0m0s
  secretName: dpf-provisioning-client-secret
  usages:
  - client auth
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/component: certificate
    app.kubernetes.io/part-of: dpf-provisioning-controller-manager
    dpu.nvidia.com/component: dpf-provisioning-controller-manager
  name: dpf-provisioning-serving-cert
  namespace: dpf-provisioning
spec:
  dnsNames:
  - dpf-provisioning-webhook-service.dpf-provisioning.svc
  - dpf-provisioning-webhook-service.dpf-provisioning.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: dpf-provisioning-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kubernetes.io/part-of: dpf-provisioning-controller-manager
    dpu.nvidia.com/component: dpf-provisioning-controller-manager
  name: dpf-provisioning-issuer
  namespace: dpf-provisioning
spec:
  ca:
    secretName: dpf-provisioning-ca-secret
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kubernetes.io/component: certificate
    app.kubernetes.io/part-of: dpf-provisioning-controller-manager
    dpu.nvidia.com/component: dpf-provisioning-controller-manager
  name: dpf-provisioning-selfsigned-issuer
  namespace: dpf-provisioning
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: dpf-provisioning/dpf-provisioning-serving-cert
  labels:
    app.kubernetes.io/part-of: dpf-provisioning-controller-manager
    dpu.nvidia.com/component: dpf-provisioning-controller-manager
  name: dpf-provisioning-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: dpf-provisioning-webhook-service
      namespace: dpf-provisioning
      path: /mutate-provisioning-dpu-nvidia-com-v1alpha1-dpuset
  failurePolicy: Fail
  name: mdpuset.kb.io
  rules:
  - apiGroups:
    - provisioning.dpu.nvidia.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - dpusets
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: dpf-provisioning/dpf-provisioning-serving-cert
  labels:
    app.kubernetes.io/part-of: dpf-provisioning-controller-manager
    dpu.nvidia.com/component: dpf-provisioning-controller-manager
  name: dpf-provisioning-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: dpf-provisioning-webhook-service
      namespace: dpf-provisioning
      path: /validate-provisioning-dpu-nvidia-com-v1alpha1-bfb
  failurePolicy: Fail
  name: vbfb.kb.io
  rules:
  - apiGroups:
    - provisioning.dpu.nvidia.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - bfbs
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: dpf-provisioning-webhook-service
      namespace: dpf-provisioning
      path: /validate-provisioning-dpu-nvidia-com-v1alpha1-dpuflavor
  failurePolicy: Fail
  name: vdpuflavor.kb.io
  rules:
  - apiGroups:
    - provisioning.dpu.nvidia.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - dpuflavors
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: dpf-provisioning-webhook-service
      namespace: dpf-provisioning
      path: /validate-provisioning-dpu-nvidia-com-v1alpha1-dpuset
  failurePolicy: Fail
  name: vdpuset.kb.io
  rules:
  - apiGroups:
    - provisioning.dpu.nvidia.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - dpusets
  sideEffects: None
---
apiVersion: provisioning.dpu.nvidia.com/v1alpha1
kind: DPUFlavor
metadata:
  labels:
    app.kubernetes.io/part-of: dpf-provisioning-controller-manager
    dpu.nvidia.com/component: dpf-provisioning-controller-manager
  name: dpf-provisioning-hbn-ovn
  namespace: dpf-provisioning
spec:
  bfcfgParameters:
  - UPDATE_ATF_UEFI=yes
  - UPDATE_DPU_OS=yes
  - WITH_NIC_FW_UPDATE=yes
  configFiles:
  - operation: override
    path: /etc/mellanox/mlnx-bf.conf
    permissions: "0644"
    raw: |
      ALLOW_SHARED_RQ="no"
      IPSEC_FULL_OFFLOAD="no"
      ENABLE_ESWITCH_MULTIPORT="yes"
  - operation: override
    path: /etc/mellanox/mlnx-ovs.conf
    permissions: "0644"
    raw: |
      CREATE_OVS_BRIDGES="no"
  - operation: override
    path: /etc/mellanox/mlnx-sf.conf
    permissions: "0644"
    raw: ""
  grub:
    kernelParameters:
    - console=hvc0
    - console=ttyAMA0
    - earlycon=pl011,0x13010000
    - fixrttc
    - net.ifnames=0
    - biosdevname=0
    - iommu.passthrough=1
    - cgroup_no_v1=net_prio,net_cls
    - hugepagesz=2048kB
    - hugepages=3072
  nvconfig:
  - device: '*'
    parameters:
    - PF_BAR2_ENABLE=0
    - PER_PF_NUM_SF=1
    - PF_TOTAL_SF=20
    - PF_SF_BAR_SIZE=10
    - NUM_PF_MSIX_VALID=0
    - PF_NUM_PF_MSIX_VALID=1
    - PF_NUM_PF_MSIX=228
    - INTERNAL_CPU_MODEL=1
    - INTERNAL_CPU_OFFLOAD_ENGINE=0
    - SRIOV_EN=1
    - NUM_OF_VFS=46
    - LAG_RESOURCE_ALLOCATION=1
  ovs:
    rawConfigScript: |
      _ovs-vsctl() {
        ovs-vsctl --no-wait --timeout 15 "$@"
      }

      _ovs-vsctl set Open_vSwitch . other_config:doca-init=true
      _ovs-vsctl set Open_vSwitch . other_config:dpdk-max-memzones=50000
      _ovs-vsctl set Open_vSwitch . other_config:hw-offload=true
      _ovs-vsctl set Open_vSwitch . other_config:pmd-quiet-idle=true
      _ovs-vsctl set Open_vSwitch . other_config:max-idle=20000
      _ovs-vsctl set Open_vSwitch . other_config:max-revalidator=5000
      _ovs-vsctl set Open_vSwitch . other_config:ctl-pipe-size=1024
      _ovs-vsctl --if-exists del-br ovsbr1
      _ovs-vsctl --if-exists del-br ovsbr2
      _ovs-vsctl --may-exist add-br br-sfc
      _ovs-vsctl set bridge br-sfc datapath_type=netdev
      _ovs-vsctl set bridge br-sfc fail_mode=secure
      _ovs-vsctl --may-exist add-port br-sfc p0
      _ovs-vsctl set Interface p0 type=dpdk
      _ovs-vsctl set Port p0 external_ids:dpf-type=physical

      _ovs-vsctl set Open_vSwitch . external-ids:ovn-bridge-datapath-type=netdev
      _ovs-vsctl --may-exist add-br br-ovn
      _ovs-vsctl set bridge br-ovn datapath_type=netdev
      _ovs-vsctl --may-exist add-port br-ovn pf0hpf
      _ovs-vsctl set Interface pf0hpf type=dpdk
