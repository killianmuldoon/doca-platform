{{ if and (index .Values "kamaji-etcd" "enabled") (index .Values "kamaji-etcd-defrag" "enabled") }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-kamaji-etcd-defrag-job
  namespace: {{ .Release.Namespace }}
spec:
  schedule: {{ index .Values "kamaji-etcd-defrag" "schedule" }}
  successfulJobsHistoryLimit: {{ index .Values "kamaji-etcd" "successfulJobsHistoryLimit" }}
  jobTemplate:
    spec:
      backoffLimit: {{ index .Values "kamaji-etcd" "backoffLimit" }}
      template:
        spec:
          tolerations:
          {{- index .Values "kamaji-etcd" "tolerations" | toYaml | nindent 12 }}
          affinity:
          {{- index .Values "kamaji-etcd" "affinity" | toYaml | nindent 12 }}
          containers:
            - name: etcd-defrag
              image: {{ index .Values "kamaji-etcd-defrag" "image" }}
              args:
                - --endpoints="https://{{ .Release.Name }}-kamaji-etcd-0:{{ index .Values "kamaji-etcd" "clientPort" }},{{ .Release.Name }}-kamaji-etcd-1:{{ index .Values "kamaji-etcd" "clientPort" }},{{ .Release.Name }}-kamaji-etcd-2:{{ index .Values "kamaji-etcd" "clientPort" }}"
                - --cacert=/opt/certs/ca/ca.crt
                - --cert=/opt/certs/root-client-certs/tls.crt
                - --key=/opt/certs/root-client-certs/tls.key
                - --cluster
                - --defrag-rule
                - {{ index .Values "kamaji-etcd-defrag" "defragRule" | quote }}
              volumeMounts:
                - mountPath: /opt/certs/root-client-certs
                  name: root-client-certs
                - mountPath: /opt/certs/ca
                  name: certs
          restartPolicy: OnFailure
          securityContext:
            runAsUser: 0
          volumes:
            - name: root-client-certs
              secret:
                secretName: {{ .Release.Name }}-kamaji-etcd-root-client-certs
            - name: certs
              secret:
                secretName: {{ .Release.Name }}-kamaji-etcd-certs
{{ end }}
