{{- $_ := required "controller.config.dpuClusterSecret must be set" .Values.controller.config.dpuClusterSecret }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "snap-controller.fullname" . }}-controller
  labels:
    {{- include "snap-controller.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "snap-controller.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.controller.replicas }}
  template:
    metadata:
      labels:
        {{- include "snap-controller.selectorLabels" . | nindent 8 }}
        {{- with .Values.controller.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- toYaml .Values.controller.podAnnotations | nindent 8 }}
    spec:
      {{- with .Values.controller.imagePullSecrets | default list }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.controller.podSecurityContext | nindent 8 }}
      containers:
        - name: controller
          image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag | default .Chart.AppVersion }}"
          command:
          - /manager
          args:
           - --config-namespace={{ .Values.controller.config.configNamespace | default .Release.Namespace }}
          env:
          - name: KUBERNETES_SERVICE_HOST
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.controller.config.dpuClusterSecret }}"
                key: KUBERNETES_SERVICE_HOST
          - name: KUBERNETES_SERVICE_PORT
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.controller.config.dpuClusterSecret }}"
                key: KUBERNETES_SERVICE_PORT
          imagePullPolicy: {{ .Values.controller.pullPolicy }}
          securityContext:
            {{- toYaml .Values.controller.securityContext | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.controller.resources | nindent 12 }}
          volumeMounts:
          - name: tokenfile
            mountPath: "/var/run/secrets/kubernetes.io/serviceaccount"
            readOnly: true
      volumes:
      - name: tokenfile
        projected:
          sources:
          - secret:
              name: "{{ .Values.controller.config.dpuClusterSecret }}"
              items:
              - key: TOKEN_FILE
                path: token
          - secret:
              name: "{{ .Values.controller.config.dpuClusterSecret }}"
              items:
              - key: KUBERNETES_CA_DATA
                path: ca.crt
      terminationGracePeriodSeconds: 10
      {{- with .Values.controller.nodeSelector | default dict }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations | default list }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
